---
description: 
globs: 
alwaysApply: true
---
---
description: Script Import Standards
globs: *.py
---
# Script Import Standards

Standards for importing functions from the scripts directory to ensure proper function imports and exports.

<rule>
name: script_import_validation
description: Ensures functions imported from scripts are properly defined, exported, and callable
filters:
  # Match Python files that import from scripts
  - type: file_extension
    pattern: "\\.py$"
  - type: content
    pattern: "from\\s+\\.scripts\\s+import|from\\s+github_review_bot\\.scripts\\s+import"

actions:
  - type: suggest
    conditions:
      - pattern: "from\\s+(?:\\.scripts|github_review_bot\\.scripts)\\s+import\\s+([^\\n]+)"
        message: "Verify that imported names match actual function definitions in scripts"
    message: |
      When importing from scripts:

      1. Import specific functions, not modules:
         ```python
         # Bad:
         from .scripts import load_config  # if load_config is a module
         
         # Good:
         from .scripts.load_config import load_config  # importing the actual function
         ```

      2. Verify function existence and signature:
         ```python
         # Bad:
         from .scripts import non_existent_function
         
         # Good:
         from .scripts.module import existing_function
         ```

      3. Use explicit imports:
         ```python
         # Bad:
         from .scripts import *
         
         # Good:
         from .scripts.module import function1, function2
         ```

      4. Ensure exported functions are defined at module level:
         ```python
         # Bad: Function only defined inside main()
         def main():
             def helper_function():
                 pass
         
         # Good: Function defined at module level
         def helper_function():
             pass
         
         def main():
             helper_function()
         ```

      5. Match function names with file names for main exports:
         ```python
         # File: generate_review.py
         # Bad: Main function not matching file name
         def create_review():
             pass
         
         # Good: Main function matches file name
         def generate_review():
             pass
         ```

  - type: reject
    conditions:
      - pattern: "from\\s+\\.scripts\\s+import\\s+\\*"
        message: "Wildcard imports are not allowed from scripts directory"
      - pattern: "import\\s+scripts\\."
        message: "Use relative imports (from .scripts) for local script modules"
      - pattern: "def\\s+main\\(\\).*?:\\s*[^\\n]*\\s+def\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
        message: "Functions that need to be imported should be defined at module level, not inside main()"

examples:
  - input: |
      # Bad: Importing module instead of function
      from .scripts import load_config
      
      # Good: Importing specific function
      from .scripts.load_config import load_config
      
      # Bad: Wildcard import
      from .scripts import *
      
      # Good: Multiple specific imports
      from .scripts.config import load_config
      from .scripts.analysis import run_analysis
      
      # Bad: Function defined inside main
      def main():
          def process_data():
              pass
      
      # Good: Function defined at module level
      def process_data():
          pass
      
      def main():
          process_data()
    output: "Correctly implemented script imports and exports"

metadata:
  priority: high
  version: 1.0
</rule>